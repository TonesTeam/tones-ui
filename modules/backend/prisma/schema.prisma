// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider                  = "prisma-erd-generator"
  output                    = "./ERD.pdf"
  includeRelationFromFields = true
  theme                     = "neutral"
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.db"
}

model Protocol {
  id                 Int                  @id @default(autoincrement())
  name               String
  creationDate       DateTime
  comment            String?
  creator            User                 @relation(fields: [userId], references: [id])
  userId             Int
  washingLiquid      Liquid               @relation(fields: [liquidId], references: [id])
  steps              Step[]
  protocolDeployment ProtocolDeployment[]
  liquidId           Int
  executedStep       ExecutedStep[]
  deleted            Boolean              @default(false)
}

model ProtocolDeployment {
  id                     Int                      @id @default(autoincrement())
  protocol               Protocol                 @relation(fields: [protocolId], references: [id])
  protocolId             Int
  liquidAmount           Int
  deploymentError        DeploymentError[]
  usedSlot               UsedSlot[]
  DeploymentLiquidConfig DeploymentLiquidConfig[]
}

model DeploymentLiquidConfig {
  id                   Int                @id @default(autoincrement())
  deployment           ProtocolDeployment @relation(fields: [protocolDeploymentId], references: [id])
  protocolDeploymentId Int
  liquidSlotNumber     Int
  liquid               Liquid             @relation(fields: [liquidId], references: [id])
  liquidId             Int
  liquidAmount         Int
}

model DeploymentError {
  id                   Int                @id @default(autoincrement())
  deployment           ProtocolDeployment @relation(fields: [protocolDeploymentId], references: [id])
  protocolDeploymentId Int
  error                String
}

model User {
  id        Int        @id @default(autoincrement())
  username  String
  role      String
  protocols Protocol[]
  deleted   Boolean    @default(false)
}

model Slot {
  id           Int            @id @default(autoincrement())
  usedSlot     UsedSlot[]
  ExecutedStep ExecutedStep[]
}

model UsedSlot {
  id                   Int                @id @default(autoincrement())
  slot                 Slot               @relation(fields: [slotId], references: [id])
  deployment           ProtocolDeployment @relation(fields: [protocolDeploymentId], references: [id])
  slotId               Int
  protocolDeploymentId Int
}

model Step {
  id                Int                @id @default(autoincrement())
  protocol          Protocol           @relation(fields: [protocolId], references: [id])
  protocolId        Int
  sequenceOrder     Int
  stepType          String
  liquidApplication LiquidApplication?
  washing           Washing?
  temperatureChange TemperatureChange?
  ExecutedStep      ExecutedStep[]
}

model ExecutedStep {
  id         Int      @id @default(autoincrement())
  protocol   Protocol @relation(fields: [protocolId], references: [id])
  protocolId Int
  step       Step     @relation(fields: [stepId], references: [id])
  stepId     Int
  targetSlot Slot     @relation(fields: [slotId], references: [id])
  slotId     Int
}

model LiquidApplication {
  id                    Int     @id @default(autoincrement())
  liquid                Liquid  @relation(fields: [liquidId], references: [id])
  step                  Step    @relation(fields: [stepId], references: [id])
  liquidIncubationTime  Int
  washingIncubationTime Int?
  doWash                Boolean @default(true)
  liquidId              Int
  stepId                Int     @unique
}

model Washing {
  id            Int    @id @default(autoincrement())
  times         Int
  washingLiquid Liquid @relation(fields: [liquidId], references: [id])
  Step          Step   @relation(fields: [stepId], references: [id])
  stepId        Int    @unique
  liquidId      Int
}

model TemperatureChange {
  id                Int     @id @default(autoincrement())
  targetTemperature Int
  blocking          Boolean
  returnToNormal    Boolean
  step              Step    @relation(fields: [stepId], references: [id])
  stepId            Int     @unique
}

model Liquid {
  id                     Int                      @id @default(autoincrement())
  name                   String
  shortname              String?
  type                   LiquidType               @relation(fields: [liquidTypeId], references: [id])
  liquidApplication      LiquidApplication[]
  deleted                Boolean                  @default(false)
  requiresCooling        Boolean
  maxTemp                Int
  Protocol               Protocol[]
  DeploymentLiquidConfig DeploymentLiquidConfig[]
  liquidTypeId           Int
  Washing                Washing[]
}

model LiquidType {
  id      Int      @id @default(autoincrement())
  name    String
  liquids Liquid[]
}
